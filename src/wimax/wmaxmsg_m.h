//
// Generated file, do not edit! Created by opp_msgc 4.1 from wimax/wmaxmsg.msg.
//

#ifndef _WMAXMSG_M_H_
#define _WMAXMSG_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "wmaxmsg.h"
#include "IPv6Addr.h"
// }}

// cplusplus {{
enum ConfirmationConde{
        WMAX_CONFIRMATION_CODE_SUCCESS, WMAX_CONFIRMATION_CODE_REJECT
   };
// }}



/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * class WMaxMacHeader
 * {
 *     @customize(true);
 *     abstract int cid;
 *     abstract bool ht;
 *     abstract int bwr;
 * }
 * </pre>
 *
 * WMaxMacHeader_Base is only useful if it gets subclassed, and WMaxMacHeader is derived from it.
 * The minimum code to be written for WMaxMacHeader is the following:
 *
 * <pre>
 * class WMaxMacHeader : public WMaxMacHeader_Base
 * {
 *   public:
 *     WMaxMacHeader() : WMaxMacHeader_Base() {}
 *     WMaxMacHeader(const WMaxMacHeader& other) : WMaxMacHeader_Base() {operator=(other);}
 *     WMaxMacHeader& operator=(const WMaxMacHeader& other) {WMaxMacHeader_Base::operator=(other); return *this;}
 *     virtual WMaxMacHeader *dup() const {return new WMaxMacHeader(*this);}
 *     // ADD CODE HERE to redefine and implement pure virtual functions from WMaxMacHeader_Base
 * };
 * </pre>
 *
 * The following should go into a .cc (.cpp) file:
 *
 * <pre>
 * Register_Class(WMaxMacHeader);
 * </pre>
 */
class WMaxMacHeader_Base : public ::cObject
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMacHeader_Base&);
    // make constructors protected to avoid instantiation
    WMaxMacHeader_Base();
    WMaxMacHeader_Base(const WMaxMacHeader_Base& other);
    // make assignment operator protected to force the user override it
    WMaxMacHeader_Base& operator=(const WMaxMacHeader_Base& other);

  public:
    virtual ~WMaxMacHeader_Base();
    virtual WMaxMacHeader_Base *dup() const {throw cRuntimeError("You forgot to manually add a dup() function to class WMaxMacHeader");}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCid() const = 0;
    virtual void setCid(int cid_var) = 0;
    virtual bool getHt() const = 0;
    virtual void setHt(bool ht_var) = 0;
    virtual int getBwr() const = 0;
    virtual void setBwr(int bwr_var) = 0;
};

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgDlMap
 * {
 *     WMaxDlMapIE IE[];
 * }
 * </pre>
 */
class WMaxMsgDlMap : public ::cPacket
{
  protected:
    ::WMaxDlMapIE *IE_var; // array ptr
    unsigned int IE_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgDlMap&);

  public:
    WMaxMsgDlMap(const char *name=NULL, int kind=0);
    WMaxMsgDlMap(const WMaxMsgDlMap& other);
    virtual ~WMaxMsgDlMap();
    WMaxMsgDlMap& operator=(const WMaxMsgDlMap& other);
    virtual WMaxMsgDlMap *dup() const {return new WMaxMsgDlMap(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setIEArraySize(unsigned int size);
    virtual unsigned int getIEArraySize() const;
    virtual WMaxDlMapIE& getIE(unsigned int k);
    virtual const WMaxDlMapIE& getIE(unsigned int k) const {return const_cast<WMaxMsgDlMap*>(this)->getIE(k);}
    virtual void setIE(unsigned int k, const WMaxDlMapIE& IE_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgDlMap& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgDlMap& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgUlMap
 * {
 *     WMaxUlMapIE IE[];
 * }
 * </pre>
 */
class WMaxMsgUlMap : public ::cPacket
{
  protected:
    ::WMaxUlMapIE *IE_var; // array ptr
    unsigned int IE_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgUlMap&);

  public:
    WMaxMsgUlMap(const char *name=NULL, int kind=0);
    WMaxMsgUlMap(const WMaxMsgUlMap& other);
    virtual ~WMaxMsgUlMap();
    WMaxMsgUlMap& operator=(const WMaxMsgUlMap& other);
    virtual WMaxMsgUlMap *dup() const {return new WMaxMsgUlMap(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setIEArraySize(unsigned int size);
    virtual unsigned int getIEArraySize() const;
    virtual WMaxUlMapIE& getIE(unsigned int k);
    virtual const WMaxUlMapIE& getIE(unsigned int k) const {return const_cast<WMaxMsgUlMap*>(this)->getIE(k);}
    virtual void setIE(unsigned int k, const WMaxUlMapIE& IE_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgUlMap& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgUlMap& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgDCD
 * {
 *     int confChangeCount;
 * }
 * </pre>
 */
class WMaxMsgDCD : public ::cPacket
{
  protected:
    int confChangeCount_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgDCD&);

  public:
    WMaxMsgDCD(const char *name=NULL, int kind=0);
    WMaxMsgDCD(const WMaxMsgDCD& other);
    virtual ~WMaxMsgDCD();
    WMaxMsgDCD& operator=(const WMaxMsgDCD& other);
    virtual WMaxMsgDCD *dup() const {return new WMaxMsgDCD(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getConfChangeCount() const;
    virtual void setConfChangeCount(int confChangeCount_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgDCD& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgDCD& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgUCD
 * {
 *     int confChangeCount;
 * }
 * </pre>
 */
class WMaxMsgUCD : public ::cPacket
{
  protected:
    int confChangeCount_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgUCD&);

  public:
    WMaxMsgUCD(const char *name=NULL, int kind=0);
    WMaxMsgUCD(const WMaxMsgUCD& other);
    virtual ~WMaxMsgUCD();
    WMaxMsgUCD& operator=(const WMaxMsgUCD& other);
    virtual WMaxMsgUCD *dup() const {return new WMaxMsgUCD(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getConfChangeCount() const;
    virtual void setConfChangeCount(int confChangeCount_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgUCD& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgUCD& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgRngReq
 * {
 *     int purpose;
 *     WMaxRngReq rngReq;
 *     IPv6Addr myIP; 
 * 
 *     
 *     WMaxQos SfQos[];
 *     int SfCid[];
 * }
 * </pre>
 */
class WMaxMsgRngReq : public ::cPacket
{
  protected:
    int purpose_var;
    ::WMaxRngReq rngReq_var;
    ::IPv6Addr myIP_var;
    ::WMaxQos *SfQos_var; // array ptr
    unsigned int SfQos_arraysize;
    int *SfCid_var; // array ptr
    unsigned int SfCid_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgRngReq&);

  public:
    WMaxMsgRngReq(const char *name=NULL, int kind=0);
    WMaxMsgRngReq(const WMaxMsgRngReq& other);
    virtual ~WMaxMsgRngReq();
    WMaxMsgRngReq& operator=(const WMaxMsgRngReq& other);
    virtual WMaxMsgRngReq *dup() const {return new WMaxMsgRngReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getPurpose() const;
    virtual void setPurpose(int purpose_var);
    virtual WMaxRngReq& getRngReq();
    virtual const WMaxRngReq& getRngReq() const {return const_cast<WMaxMsgRngReq*>(this)->getRngReq();}
    virtual void setRngReq(const WMaxRngReq& rngReq_var);
    virtual IPv6Addr& getMyIP();
    virtual const IPv6Addr& getMyIP() const {return const_cast<WMaxMsgRngReq*>(this)->getMyIP();}
    virtual void setMyIP(const IPv6Addr& myIP_var);
    virtual void setSfQosArraySize(unsigned int size);
    virtual unsigned int getSfQosArraySize() const;
    virtual WMaxQos& getSfQos(unsigned int k);
    virtual const WMaxQos& getSfQos(unsigned int k) const {return const_cast<WMaxMsgRngReq*>(this)->getSfQos(k);}
    virtual void setSfQos(unsigned int k, const WMaxQos& SfQos_var);
    virtual void setSfCidArraySize(unsigned int size);
    virtual unsigned int getSfCidArraySize() const;
    virtual int getSfCid(unsigned int k) const;
    virtual void setSfCid(unsigned int k, int SfCid_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgRngReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgRngReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgRngRsp
 * {
 *     int purpose;
 *     WMaxRngRsp rngRsp;
 * 
 *     
 *     int oldCid[];
 *     int newCid[];
 * }
 * </pre>
 */
class WMaxMsgRngRsp : public ::cPacket
{
  protected:
    int purpose_var;
    ::WMaxRngRsp rngRsp_var;
    int *oldCid_var; // array ptr
    unsigned int oldCid_arraysize;
    int *newCid_var; // array ptr
    unsigned int newCid_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgRngRsp&);

  public:
    WMaxMsgRngRsp(const char *name=NULL, int kind=0);
    WMaxMsgRngRsp(const WMaxMsgRngRsp& other);
    virtual ~WMaxMsgRngRsp();
    WMaxMsgRngRsp& operator=(const WMaxMsgRngRsp& other);
    virtual WMaxMsgRngRsp *dup() const {return new WMaxMsgRngRsp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getPurpose() const;
    virtual void setPurpose(int purpose_var);
    virtual WMaxRngRsp& getRngRsp();
    virtual const WMaxRngRsp& getRngRsp() const {return const_cast<WMaxMsgRngRsp*>(this)->getRngRsp();}
    virtual void setRngRsp(const WMaxRngRsp& rngRsp_var);
    virtual void setOldCidArraySize(unsigned int size);
    virtual unsigned int getOldCidArraySize() const;
    virtual int getOldCid(unsigned int k) const;
    virtual void setOldCid(unsigned int k, int oldCid_var);
    virtual void setNewCidArraySize(unsigned int size);
    virtual unsigned int getNewCidArraySize() const;
    virtual int getNewCid(unsigned int k) const;
    virtual void setNewCid(unsigned int k, int newCid_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgRngRsp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgRngRsp& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgSbcReq
 * {
 * }
 * </pre>
 */
class WMaxMsgSbcReq : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgSbcReq&);

  public:
    WMaxMsgSbcReq(const char *name=NULL, int kind=0);
    WMaxMsgSbcReq(const WMaxMsgSbcReq& other);
    virtual ~WMaxMsgSbcReq();
    WMaxMsgSbcReq& operator=(const WMaxMsgSbcReq& other);
    virtual WMaxMsgSbcReq *dup() const {return new WMaxMsgSbcReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgSbcReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgSbcReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgSbcRsp
 * {
 * }
 * </pre>
 */
class WMaxMsgSbcRsp : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgSbcRsp&);

  public:
    WMaxMsgSbcRsp(const char *name=NULL, int kind=0);
    WMaxMsgSbcRsp(const WMaxMsgSbcRsp& other);
    virtual ~WMaxMsgSbcRsp();
    WMaxMsgSbcRsp& operator=(const WMaxMsgSbcRsp& other);
    virtual WMaxMsgSbcRsp *dup() const {return new WMaxMsgSbcRsp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgSbcRsp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgSbcRsp& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgPkmReq
 * {
 *     int code;
 * }
 * </pre>
 */
class WMaxMsgPkmReq : public ::cPacket
{
  protected:
    int code_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgPkmReq&);

  public:
    WMaxMsgPkmReq(const char *name=NULL, int kind=0);
    WMaxMsgPkmReq(const WMaxMsgPkmReq& other);
    virtual ~WMaxMsgPkmReq();
    WMaxMsgPkmReq& operator=(const WMaxMsgPkmReq& other);
    virtual WMaxMsgPkmReq *dup() const {return new WMaxMsgPkmReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCode() const;
    virtual void setCode(int code_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgPkmReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgPkmReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgPkmRsp
 * {
 *     int code;
 * }
 * </pre>
 */
class WMaxMsgPkmRsp : public ::cPacket
{
  protected:
    int code_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgPkmRsp&);

  public:
    WMaxMsgPkmRsp(const char *name=NULL, int kind=0);
    WMaxMsgPkmRsp(const WMaxMsgPkmRsp& other);
    virtual ~WMaxMsgPkmRsp();
    WMaxMsgPkmRsp& operator=(const WMaxMsgPkmRsp& other);
    virtual WMaxMsgPkmRsp *dup() const {return new WMaxMsgPkmRsp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCode() const;
    virtual void setCode(int code_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgPkmRsp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgPkmRsp& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgRegReq
 * {
 * }
 * </pre>
 */
class WMaxMsgRegReq : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgRegReq&);

  public:
    WMaxMsgRegReq(const char *name=NULL, int kind=0);
    WMaxMsgRegReq(const WMaxMsgRegReq& other);
    virtual ~WMaxMsgRegReq();
    WMaxMsgRegReq& operator=(const WMaxMsgRegReq& other);
    virtual WMaxMsgRegReq *dup() const {return new WMaxMsgRegReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgRegReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgRegReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgRegRsp
 * {
 * }
 * </pre>
 */
class WMaxMsgRegRsp : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgRegRsp&);

  public:
    WMaxMsgRegRsp(const char *name=NULL, int kind=0);
    WMaxMsgRegRsp(const WMaxMsgRegRsp& other);
    virtual ~WMaxMsgRegRsp();
    WMaxMsgRegRsp& operator=(const WMaxMsgRegRsp& other);
    virtual WMaxMsgRegRsp *dup() const {return new WMaxMsgRegRsp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgRegRsp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgRegRsp& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgMobScnReq
 * {
 * }
 * </pre>
 */
class WMaxMsgMobScnReq : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgMobScnReq&);

  public:
    WMaxMsgMobScnReq(const char *name=NULL, int kind=0);
    WMaxMsgMobScnReq(const WMaxMsgMobScnReq& other);
    virtual ~WMaxMsgMobScnReq();
    WMaxMsgMobScnReq& operator=(const WMaxMsgMobScnReq& other);
    virtual WMaxMsgMobScnReq *dup() const {return new WMaxMsgMobScnReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgMobScnReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgMobScnReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgMobScnRsp
 * {
 * }
 * </pre>
 */
class WMaxMsgMobScnRsp : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgMobScnRsp&);

  public:
    WMaxMsgMobScnRsp(const char *name=NULL, int kind=0);
    WMaxMsgMobScnRsp(const WMaxMsgMobScnRsp& other);
    virtual ~WMaxMsgMobScnRsp();
    WMaxMsgMobScnRsp& operator=(const WMaxMsgMobScnRsp& other);
    virtual WMaxMsgMobScnRsp *dup() const {return new WMaxMsgMobScnRsp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgMobScnRsp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgMobScnRsp& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgMSHOREQ
 * {
 *     WMaxBSFull BSFull[];
 * }
 * </pre>
 */
class WMaxMsgMSHOREQ : public ::cPacket
{
  protected:
    ::WMaxBSFull *BSFull_var; // array ptr
    unsigned int BSFull_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgMSHOREQ&);

  public:
    WMaxMsgMSHOREQ(const char *name=NULL, int kind=0);
    WMaxMsgMSHOREQ(const WMaxMsgMSHOREQ& other);
    virtual ~WMaxMsgMSHOREQ();
    WMaxMsgMSHOREQ& operator=(const WMaxMsgMSHOREQ& other);
    virtual WMaxMsgMSHOREQ *dup() const {return new WMaxMsgMSHOREQ(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setBSFullArraySize(unsigned int size);
    virtual unsigned int getBSFullArraySize() const;
    virtual WMaxBSFull& getBSFull(unsigned int k);
    virtual const WMaxBSFull& getBSFull(unsigned int k) const {return const_cast<WMaxMsgMSHOREQ*>(this)->getBSFull(k);}
    virtual void setBSFull(unsigned int k, const WMaxBSFull& BSFull_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgMSHOREQ& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgMSHOREQ& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgBSHORSP
 * {
 *     WMaxBSFull BSFull[];
 * }
 * </pre>
 */
class WMaxMsgBSHORSP : public ::cPacket
{
  protected:
    ::WMaxBSFull *BSFull_var; // array ptr
    unsigned int BSFull_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgBSHORSP&);

  public:
    WMaxMsgBSHORSP(const char *name=NULL, int kind=0);
    WMaxMsgBSHORSP(const WMaxMsgBSHORSP& other);
    virtual ~WMaxMsgBSHORSP();
    WMaxMsgBSHORSP& operator=(const WMaxMsgBSHORSP& other);
    virtual WMaxMsgBSHORSP *dup() const {return new WMaxMsgBSHORSP(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual void setBSFullArraySize(unsigned int size);
    virtual unsigned int getBSFullArraySize() const;
    virtual WMaxBSFull& getBSFull(unsigned int k);
    virtual const WMaxBSFull& getBSFull(unsigned int k) const {return const_cast<WMaxMsgBSHORSP*>(this)->getBSFull(k);}
    virtual void setBSFull(unsigned int k, const WMaxBSFull& BSFull_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgBSHORSP& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgBSHORSP& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgHOIND
 * {
 *     int status;
 *     WMaxBSFull target;
 * }
 * </pre>
 */
class WMaxMsgHOIND : public ::cPacket
{
  protected:
    int status_var;
    ::WMaxBSFull target_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgHOIND&);

  public:
    WMaxMsgHOIND(const char *name=NULL, int kind=0);
    WMaxMsgHOIND(const WMaxMsgHOIND& other);
    virtual ~WMaxMsgHOIND();
    WMaxMsgHOIND& operator=(const WMaxMsgHOIND& other);
    virtual WMaxMsgHOIND *dup() const {return new WMaxMsgHOIND(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getStatus() const;
    virtual void setStatus(int status_var);
    virtual WMaxBSFull& getTarget();
    virtual const WMaxBSFull& getTarget() const {return const_cast<WMaxMsgHOIND*>(this)->getTarget();}
    virtual void setTarget(const WMaxBSFull& target_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgHOIND& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgHOIND& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgCDMA
 * {
 *     int code;
 *     int purpose; 
 * 
 *     
 * }
 * </pre>
 */
class WMaxMsgCDMA : public ::cPacket
{
  protected:
    int code_var;
    int purpose_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgCDMA&);

  public:
    WMaxMsgCDMA(const char *name=NULL, int kind=0);
    WMaxMsgCDMA(const WMaxMsgCDMA& other);
    virtual ~WMaxMsgCDMA();
    WMaxMsgCDMA& operator=(const WMaxMsgCDMA& other);
    virtual WMaxMsgCDMA *dup() const {return new WMaxMsgCDMA(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCode() const;
    virtual void setCode(int code_var);
    virtual int getPurpose() const;
    virtual void setPurpose(int purpose_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgCDMA& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgCDMA& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgBWR
 * {
 * }
 * </pre>
 */
class WMaxMsgBWR : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgBWR&);

  public:
    WMaxMsgBWR(const char *name=NULL, int kind=0);
    WMaxMsgBWR(const WMaxMsgBWR& other);
    virtual ~WMaxMsgBWR();
    WMaxMsgBWR& operator=(const WMaxMsgBWR& other);
    virtual WMaxMsgBWR *dup() const {return new WMaxMsgBWR(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMsgBWR& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgBWR& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgDsaReq
 * {
 *     int transactionID;
 *     WMaxQos qos[];
 *     
 *     int vlanId[];
 * }
 * </pre>
 */
class WMaxMsgDsaReq : public ::cPacket
{
  protected:
    int transactionID_var;
    ::WMaxQos *qos_var; // array ptr
    unsigned int qos_arraysize;
    int *vlanId_var; // array ptr
    unsigned int vlanId_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgDsaReq&);

  public:
    WMaxMsgDsaReq(const char *name=NULL, int kind=0);
    WMaxMsgDsaReq(const WMaxMsgDsaReq& other);
    virtual ~WMaxMsgDsaReq();
    WMaxMsgDsaReq& operator=(const WMaxMsgDsaReq& other);
    virtual WMaxMsgDsaReq *dup() const {return new WMaxMsgDsaReq(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getTransactionID() const;
    virtual void setTransactionID(int transactionID_var);
    virtual void setQosArraySize(unsigned int size);
    virtual unsigned int getQosArraySize() const;
    virtual WMaxQos& getQos(unsigned int k);
    virtual const WMaxQos& getQos(unsigned int k) const {return const_cast<WMaxMsgDsaReq*>(this)->getQos(k);}
    virtual void setQos(unsigned int k, const WMaxQos& qos_var);
    virtual void setVlanIdArraySize(unsigned int size);
    virtual unsigned int getVlanIdArraySize() const;
    virtual int getVlanId(unsigned int k) const;
    virtual void setVlanId(unsigned int k, int vlanId_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgDsaReq& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgDsaReq& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgDsxRvd
 * {
 *     int transactionID;
 *     int confirmationCode; 
 * }
 * </pre>
 */
class WMaxMsgDsxRvd : public ::cPacket
{
  protected:
    int transactionID_var;
    int confirmationCode_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgDsxRvd&);

  public:
    WMaxMsgDsxRvd(const char *name=NULL, int kind=0);
    WMaxMsgDsxRvd(const WMaxMsgDsxRvd& other);
    virtual ~WMaxMsgDsxRvd();
    WMaxMsgDsxRvd& operator=(const WMaxMsgDsxRvd& other);
    virtual WMaxMsgDsxRvd *dup() const {return new WMaxMsgDsxRvd(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getTransactionID() const;
    virtual void setTransactionID(int transactionID_var);
    virtual int getConfirmationCode() const;
    virtual void setConfirmationCode(int confirmationCode_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgDsxRvd& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgDsxRvd& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgDsaRsp
 * {
 *     int transactionID;
 *     int confirmationCode; 
 *     WMaxQos qos[];
 *     int cid;
 * }
 * </pre>
 */
class WMaxMsgDsaRsp : public ::cPacket
{
  protected:
    int transactionID_var;
    int confirmationCode_var;
    ::WMaxQos *qos_var; // array ptr
    unsigned int qos_arraysize;
    int cid_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgDsaRsp&);

  public:
    WMaxMsgDsaRsp(const char *name=NULL, int kind=0);
    WMaxMsgDsaRsp(const WMaxMsgDsaRsp& other);
    virtual ~WMaxMsgDsaRsp();
    WMaxMsgDsaRsp& operator=(const WMaxMsgDsaRsp& other);
    virtual WMaxMsgDsaRsp *dup() const {return new WMaxMsgDsaRsp(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getTransactionID() const;
    virtual void setTransactionID(int transactionID_var);
    virtual int getConfirmationCode() const;
    virtual void setConfirmationCode(int confirmationCode_var);
    virtual void setQosArraySize(unsigned int size);
    virtual unsigned int getQosArraySize() const;
    virtual WMaxQos& getQos(unsigned int k);
    virtual const WMaxQos& getQos(unsigned int k) const {return const_cast<WMaxMsgDsaRsp*>(this)->getQos(k);}
    virtual void setQos(unsigned int k, const WMaxQos& qos_var);
    virtual int getCid() const;
    virtual void setCid(int cid_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgDsaRsp& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgDsaRsp& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMsgDsaAck
 * {
 *     int transactionID;
 *     int confirmationCode; 
 *     WMaxQos qos[];
 * }
 * </pre>
 */
class WMaxMsgDsaAck : public ::cPacket
{
  protected:
    int transactionID_var;
    int confirmationCode_var;
    ::WMaxQos *qos_var; // array ptr
    unsigned int qos_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMsgDsaAck&);

  public:
    WMaxMsgDsaAck(const char *name=NULL, int kind=0);
    WMaxMsgDsaAck(const WMaxMsgDsaAck& other);
    virtual ~WMaxMsgDsaAck();
    WMaxMsgDsaAck& operator=(const WMaxMsgDsaAck& other);
    virtual WMaxMsgDsaAck *dup() const {return new WMaxMsgDsaAck(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getTransactionID() const;
    virtual void setTransactionID(int transactionID_var);
    virtual int getConfirmationCode() const;
    virtual void setConfirmationCode(int confirmationCode_var);
    virtual void setQosArraySize(unsigned int size);
    virtual unsigned int getQosArraySize() const;
    virtual WMaxQos& getQos(unsigned int k);
    virtual const WMaxQos& getQos(unsigned int k) const {return const_cast<WMaxMsgDsaAck*>(this)->getQos(k);}
    virtual void setQos(unsigned int k, const WMaxQos& qos_var);
};

inline void doPacking(cCommBuffer *b, WMaxMsgDsaAck& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMsgDsaAck& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxPhyDummyFrameStart
 * {
 * }
 * </pre>
 */
class WMaxPhyDummyFrameStart : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxPhyDummyFrameStart&);

  public:
    WMaxPhyDummyFrameStart(const char *name=NULL, int kind=0);
    WMaxPhyDummyFrameStart(const WMaxPhyDummyFrameStart& other);
    virtual ~WMaxPhyDummyFrameStart();
    WMaxPhyDummyFrameStart& operator=(const WMaxPhyDummyFrameStart& other);
    virtual WMaxPhyDummyFrameStart *dup() const {return new WMaxPhyDummyFrameStart(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxPhyDummyFrameStart& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxPhyDummyFrameStart& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxEvent_FlowCreationStart
 * {
 *     int skipDSA;
 *     int gateIndex;
 *     string srvName;
 *     WMaxQos qos[];
 * }
 * </pre>
 */
class WMaxEvent_FlowCreationStart : public ::cPacket
{
  protected:
    int skipDSA_var;
    int gateIndex_var;
    opp_string srvName_var;
    ::WMaxQos *qos_var; // array ptr
    unsigned int qos_arraysize;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxEvent_FlowCreationStart&);

  public:
    WMaxEvent_FlowCreationStart(const char *name=NULL, int kind=0);
    WMaxEvent_FlowCreationStart(const WMaxEvent_FlowCreationStart& other);
    virtual ~WMaxEvent_FlowCreationStart();
    WMaxEvent_FlowCreationStart& operator=(const WMaxEvent_FlowCreationStart& other);
    virtual WMaxEvent_FlowCreationStart *dup() const {return new WMaxEvent_FlowCreationStart(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getSkipDSA() const;
    virtual void setSkipDSA(int skipDSA_var);
    virtual int getGateIndex() const;
    virtual void setGateIndex(int gateIndex_var);
    virtual const char * getSrvName() const;
    virtual void setSrvName(const char * srvName_var);
    virtual void setQosArraySize(unsigned int size);
    virtual unsigned int getQosArraySize() const;
    virtual WMaxQos& getQos(unsigned int k);
    virtual const WMaxQos& getQos(unsigned int k) const {return const_cast<WMaxEvent_FlowCreationStart*>(this)->getQos(k);}
    virtual void setQos(unsigned int k, const WMaxQos& qos_var);
};

inline void doPacking(cCommBuffer *b, WMaxEvent_FlowCreationStart& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxEvent_FlowCreationStart& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMacAddConn
 * {
 *     int gateIndex;
 *     int cid;
 *     string srvName;
 *     WMaxQos qos[];
 *     int vlanId[];
 *     IPv6Addr dstAddr;
 *     uint64_t macAddr;
 * }
 * </pre>
 */
class WMaxMacAddConn : public ::cPacket
{
  protected:
    int gateIndex_var;
    int cid_var;
    opp_string srvName_var;
    ::WMaxQos *qos_var; // array ptr
    unsigned int qos_arraysize;
    int *vlanId_var; // array ptr
    unsigned int vlanId_arraysize;
    ::IPv6Addr dstAddr_var;
    uint64_t macAddr_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMacAddConn&);

  public:
    WMaxMacAddConn(const char *name=NULL, int kind=0);
    WMaxMacAddConn(const WMaxMacAddConn& other);
    virtual ~WMaxMacAddConn();
    WMaxMacAddConn& operator=(const WMaxMacAddConn& other);
    virtual WMaxMacAddConn *dup() const {return new WMaxMacAddConn(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getGateIndex() const;
    virtual void setGateIndex(int gateIndex_var);
    virtual int getCid() const;
    virtual void setCid(int cid_var);
    virtual const char * getSrvName() const;
    virtual void setSrvName(const char * srvName_var);
    virtual void setQosArraySize(unsigned int size);
    virtual unsigned int getQosArraySize() const;
    virtual WMaxQos& getQos(unsigned int k);
    virtual const WMaxQos& getQos(unsigned int k) const {return const_cast<WMaxMacAddConn*>(this)->getQos(k);}
    virtual void setQos(unsigned int k, const WMaxQos& qos_var);
    virtual void setVlanIdArraySize(unsigned int size);
    virtual unsigned int getVlanIdArraySize() const;
    virtual int getVlanId(unsigned int k) const;
    virtual void setVlanId(unsigned int k, int vlanId_var);
    virtual IPv6Addr& getDstAddr();
    virtual const IPv6Addr& getDstAddr() const {return const_cast<WMaxMacAddConn*>(this)->getDstAddr();}
    virtual void setDstAddr(const IPv6Addr& dstAddr_var);
    virtual uint64_t getMacAddr() const;
    virtual void setMacAddr(uint64_t macAddr_var);
};

inline void doPacking(cCommBuffer *b, WMaxMacAddConn& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMacAddConn& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMacAddMngmntConn
 * {
 *     int cid;
 * }
 * </pre>
 */
class WMaxMacAddMngmntConn : public ::cPacket
{
  protected:
    int cid_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMacAddMngmntConn&);

  public:
    WMaxMacAddMngmntConn(const char *name=NULL, int kind=0);
    WMaxMacAddMngmntConn(const WMaxMacAddMngmntConn& other);
    virtual ~WMaxMacAddMngmntConn();
    WMaxMacAddMngmntConn& operator=(const WMaxMacAddMngmntConn& other);
    virtual WMaxMacAddMngmntConn *dup() const {return new WMaxMacAddMngmntConn(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCid() const;
    virtual void setCid(int cid_var);
};

inline void doPacking(cCommBuffer *b, WMaxMacAddMngmntConn& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMacAddMngmntConn& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxEvent_DelConn
 * {
 *     int cid;
 *     bool isBasic;
 * }
 * </pre>
 */
class WMaxEvent_DelConn : public ::cPacket
{
  protected:
    int cid_var;
    bool isBasic_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxEvent_DelConn&);

  public:
    WMaxEvent_DelConn(const char *name=NULL, int kind=0);
    WMaxEvent_DelConn(const WMaxEvent_DelConn& other);
    virtual ~WMaxEvent_DelConn();
    WMaxEvent_DelConn& operator=(const WMaxEvent_DelConn& other);
    virtual WMaxEvent_DelConn *dup() const {return new WMaxEvent_DelConn(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getCid() const;
    virtual void setCid(int cid_var);
    virtual bool getIsBasic() const;
    virtual void setIsBasic(bool isBasic_var);
};

inline void doPacking(cCommBuffer *b, WMaxEvent_DelConn& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxEvent_DelConn& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxEvent_FlowEnable
 * {
 * }
 * </pre>
 */
class WMaxEvent_FlowEnable : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxEvent_FlowEnable&);

  public:
    WMaxEvent_FlowEnable(const char *name=NULL, int kind=0);
    WMaxEvent_FlowEnable(const WMaxEvent_FlowEnable& other);
    virtual ~WMaxEvent_FlowEnable();
    WMaxEvent_FlowEnable& operator=(const WMaxEvent_FlowEnable& other);
    virtual WMaxEvent_FlowEnable *dup() const {return new WMaxEvent_FlowEnable(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxEvent_FlowEnable& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxEvent_FlowEnable& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxEvent_FlowDisable
 * {
 * }
 * </pre>
 */
class WMaxEvent_FlowDisable : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxEvent_FlowDisable&);

  public:
    WMaxEvent_FlowDisable(const char *name=NULL, int kind=0);
    WMaxEvent_FlowDisable(const WMaxEvent_FlowDisable& other);
    virtual ~WMaxEvent_FlowDisable();
    WMaxEvent_FlowDisable& operator=(const WMaxEvent_FlowDisable& other);
    virtual WMaxEvent_FlowDisable *dup() const {return new WMaxEvent_FlowDisable(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxEvent_FlowDisable& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxEvent_FlowDisable& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>wimax/wmaxmsg.msg</tt> by opp_msgc.
 * <pre>
 * packet WMaxMacTerminateAllConns
 * {
 * }
 * </pre>
 */
class WMaxMacTerminateAllConns : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const WMaxMacTerminateAllConns&);

  public:
    WMaxMacTerminateAllConns(const char *name=NULL, int kind=0);
    WMaxMacTerminateAllConns(const WMaxMacTerminateAllConns& other);
    virtual ~WMaxMacTerminateAllConns();
    WMaxMacTerminateAllConns& operator=(const WMaxMacTerminateAllConns& other);
    virtual WMaxMacTerminateAllConns *dup() const {return new WMaxMacTerminateAllConns(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, WMaxMacTerminateAllConns& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, WMaxMacTerminateAllConns& obj) {obj.parsimUnpack(b);}


#endif // _WMAXMSG_M_H_
