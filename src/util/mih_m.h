//
// Generated file, do not edit! Created by opp_msgc 4.1 from util/mih.msg.
//

#ifndef _MIH_M_H_
#define _MIH_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include "IPv6Addr.h"
// }}



/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_EntryStart
 * {
 * }
 * </pre>
 */
class MihEvent_EntryStart : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_EntryStart&);

  public:
    MihEvent_EntryStart(const char *name=NULL, int kind=0);
    MihEvent_EntryStart(const MihEvent_EntryStart& other);
    virtual ~MihEvent_EntryStart();
    MihEvent_EntryStart& operator=(const MihEvent_EntryStart& other);
    virtual MihEvent_EntryStart *dup() const {return new MihEvent_EntryStart(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_EntryStart& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_EntryStart& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_EntryEnd
 * {
 * }
 * </pre>
 */
class MihEvent_EntryEnd : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_EntryEnd&);

  public:
    MihEvent_EntryEnd(const char *name=NULL, int kind=0);
    MihEvent_EntryEnd(const MihEvent_EntryEnd& other);
    virtual ~MihEvent_EntryEnd();
    MihEvent_EntryEnd& operator=(const MihEvent_EntryEnd& other);
    virtual MihEvent_EntryEnd *dup() const {return new MihEvent_EntryEnd(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_EntryEnd& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_EntryEnd& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_HandoverStart
 * {
 *     int targetBS;
 * }
 * </pre>
 */
class MihEvent_HandoverStart : public ::cPacket
{
  protected:
    int targetBS_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_HandoverStart&);

  public:
    MihEvent_HandoverStart(const char *name=NULL, int kind=0);
    MihEvent_HandoverStart(const MihEvent_HandoverStart& other);
    virtual ~MihEvent_HandoverStart();
    MihEvent_HandoverStart& operator=(const MihEvent_HandoverStart& other);
    virtual MihEvent_HandoverStart *dup() const {return new MihEvent_HandoverStart(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getTargetBS() const;
    virtual void setTargetBS(int targetBS_var);
};

inline void doPacking(cCommBuffer *b, MihEvent_HandoverStart& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_HandoverStart& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_HandoverEnd
 * {
 * }
 * </pre>
 */
class MihEvent_HandoverEnd : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_HandoverEnd&);

  public:
    MihEvent_HandoverEnd(const char *name=NULL, int kind=0);
    MihEvent_HandoverEnd(const MihEvent_HandoverEnd& other);
    virtual ~MihEvent_HandoverEnd();
    MihEvent_HandoverEnd& operator=(const MihEvent_HandoverEnd& other);
    virtual MihEvent_HandoverEnd *dup() const {return new MihEvent_HandoverEnd(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_HandoverEnd& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_HandoverEnd& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_ReentryStart
 * {
 * }
 * </pre>
 */
class MihEvent_ReentryStart : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_ReentryStart&);

  public:
    MihEvent_ReentryStart(const char *name=NULL, int kind=0);
    MihEvent_ReentryStart(const MihEvent_ReentryStart& other);
    virtual ~MihEvent_ReentryStart();
    MihEvent_ReentryStart& operator=(const MihEvent_ReentryStart& other);
    virtual MihEvent_ReentryStart *dup() const {return new MihEvent_ReentryStart(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_ReentryStart& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_ReentryStart& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_ReentryEnd
 * {
 * }
 * </pre>
 */
class MihEvent_ReentryEnd : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_ReentryEnd&);

  public:
    MihEvent_ReentryEnd(const char *name=NULL, int kind=0);
    MihEvent_ReentryEnd(const MihEvent_ReentryEnd& other);
    virtual ~MihEvent_ReentryEnd();
    MihEvent_ReentryEnd& operator=(const MihEvent_ReentryEnd& other);
    virtual MihEvent_ReentryEnd *dup() const {return new MihEvent_ReentryEnd(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_ReentryEnd& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_ReentryEnd& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_L3AddrConfigured
 * {
 *     IPv6Addr Addr;
 *     bool RemoteAutoconf;
 * }
 * </pre>
 */
class MihEvent_L3AddrConfigured : public ::cPacket
{
  protected:
    ::IPv6Addr Addr_var;
    bool RemoteAutoconf_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_L3AddrConfigured&);

  public:
    MihEvent_L3AddrConfigured(const char *name=NULL, int kind=0);
    MihEvent_L3AddrConfigured(const MihEvent_L3AddrConfigured& other);
    virtual ~MihEvent_L3AddrConfigured();
    MihEvent_L3AddrConfigured& operator=(const MihEvent_L3AddrConfigured& other);
    virtual MihEvent_L3AddrConfigured *dup() const {return new MihEvent_L3AddrConfigured(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual IPv6Addr& getAddr();
    virtual const IPv6Addr& getAddr() const {return const_cast<MihEvent_L3AddrConfigured*>(this)->getAddr();}
    virtual void setAddr(const IPv6Addr& Addr_var);
    virtual bool getRemoteAutoconf() const;
    virtual void setRemoteAutoconf(bool RemoteAutoconf_var);
};

inline void doPacking(cCommBuffer *b, MihEvent_L3AddrConfigured& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_L3AddrConfigured& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_L3RoutingConfigured
 * {
 * }
 * </pre>
 */
class MihEvent_L3RoutingConfigured : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_L3RoutingConfigured&);

  public:
    MihEvent_L3RoutingConfigured(const char *name=NULL, int kind=0);
    MihEvent_L3RoutingConfigured(const MihEvent_L3RoutingConfigured& other);
    virtual ~MihEvent_L3RoutingConfigured();
    MihEvent_L3RoutingConfigured& operator=(const MihEvent_L3RoutingConfigured& other);
    virtual MihEvent_L3RoutingConfigured *dup() const {return new MihEvent_L3RoutingConfigured(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_L3RoutingConfigured& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_L3RoutingConfigured& obj) {obj.parsimUnpack(b);}

/**
 * Class generated from <tt>util/mih.msg</tt> by opp_msgc.
 * <pre>
 * packet MihEvent_L3LocationUpdated
 * {
 * }
 * </pre>
 */
class MihEvent_L3LocationUpdated : public ::cPacket
{
  protected:

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MihEvent_L3LocationUpdated&);

  public:
    MihEvent_L3LocationUpdated(const char *name=NULL, int kind=0);
    MihEvent_L3LocationUpdated(const MihEvent_L3LocationUpdated& other);
    virtual ~MihEvent_L3LocationUpdated();
    MihEvent_L3LocationUpdated& operator=(const MihEvent_L3LocationUpdated& other);
    virtual MihEvent_L3LocationUpdated *dup() const {return new MihEvent_L3LocationUpdated(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
};

inline void doPacking(cCommBuffer *b, MihEvent_L3LocationUpdated& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MihEvent_L3LocationUpdated& obj) {obj.parsimUnpack(b);}


#endif // _MIH_M_H_
